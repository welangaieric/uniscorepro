
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/css/index.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js" integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.3/html2pdf.bundle.min.js"></script>

  <title>student Page</title>
</head>
<body>
  <% if (typeof(message) !== 'undefined' && message) { %>
    <input type="text" id="message" value='<%= JSON.stringify(message) %>' hidden>
  <% } %>
  <input type="text" id="type" value='lecturer' hidden>
  <input type="text" id="lecId" value=<%=data.phone %> hidden>

<!-- navigation -->
  <header>
    <nav>
      <div class="nav_brand">
        <div class="brand_name">
          <h4>Uniscrore Pro</h4>
        </div>
      </div>
      <div class="nav_links">
        <ul>
          <a href="/login">
            <li class="links">Log Out</li>
          </a>
          <a href="/about">
            <li class="links">About</li>
          </a>
          
        </ul>
      </div>
    </nav>
  </header>
<!-- end of navigation  -->

<!-- body -->
<div class=" main-containerr admin-wrapper">
  <div class="containerr" id="student">
    <div class="control-panel">
        <div class="md-row">
            <div class="md-col-2 section-btn active" data-target="chartArea">
                <p><i class="bi bi-file-earmark-bar-graph"></i> My Analytics</p>
            </div>
            <div class="md-col-2 section-btn" data-target="resTable">
                <p><i class="bi bi-file-earmark-spreadsheet"></i> My Units</p>
            </div>
        </div>  
    </div>


    <div class="content-area " >
        <div class="admin-analytics table-container showme" id="chartArea">
            <div class="md-row">
                <label for="yearSelect">Select Year:</label>
                <div class="md-col-3">
                  <select id="yearSelect">
                      <option value="all">All</option>
                      <option value="2021-2022">2021-2022</option>
                      <option value="2022-2023">2022-2023</option>
                      <option value="2023-2024">2023-2024</option>
                  </select>
                </div>
           </div>
           <div class="analytics-body" id="chartcontainerr">
            <canvas id="performanceChart"></canvas>
          </div>
        </div>
        <div class="table-container " id="resTable">
            <div class="md-row al">
                <h4>Unit Results</h4>
            </div>
            <div class="md-row">
              <div class="md-col-4">
                <select name="academicYear" id="academicYear" required>
                  <option value="2021-2022">2021/2022</option>
                  <option value="2022-2023">2022/2023</option>
                  <option value="2023-2024">2023/2024</option>
                  <option value="" selected>Academic Year</option>
                </select>
              </div>
              <div class="md-col-4">
                <select name="semester" id="semester" required>
                  <option value="1">Semester 1</option>
                  <option value="2">Semester 2</option>
                  <option value="3">Semester 3</option>  
                  <option  value=""  selected>semester</option>
                </select>
              </div>
              <div class="md-col-4">
                <button class="btnn genBtn" id="getResults"><i class="bi bi-gear" ></i> Genarate</button>
              </div>
              <div class="md-col-4">
                  <button class="btnn" id="downloadpdf" data-bs-toggle="modal" data-bs-target="#addunit" ><i class="bi bi-add"></i> Add unit</button>
              </div>
          </div>
            <div class="report-card">

                <div class="report-card-body">
                    <table class="table table-strip table-hover">
                        <thead style="background-color:#4e4e4e ;">
                          <tr>
                            <th>Unit Code</th>
                            <th>Unit Name</th>
                            <th>lecID</th>
                          </tr>
                        </thead>
                        <tbody id="unitsTable_body">
                          
                        </tbody>
                      </table>
                </div>
            </div>

               
        </div>
        
    </div>
  </div>
</div>
<!-- add unit -->
 
<div class="modal fade" id="addunit" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel"><i class="bi bi-person-fill"></i> Add Unit</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form action="" id="addUnitForm">
          <div class="form-group">
            <input type="text" class="form-input" name="unitCode" placeholder="Unit code" required>
          </div>
          
          <div class="form-group">
            <input type="text" class="form-input" name="unitName" placeholder="Unit Name" required>
          </div>
          <div class="form-group">
            <input type="text" class="form-input" name="lecturerName" placeholder="lecturer " required>
          </div>
          <div class="form-group">
            <input type="text" class="form-input" name="lecID" placeholder="lecID" required>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary add-input-btn" id="addUnitBtn">Save Changes</button>
      </div>
    </div>
  </div>
</div>
<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel"><i class="bi bi-person-fill"></i> Edit</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body" id="editModalBody">
       
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary add-input-btn" id="UpdateBtn">Save Changes</button>
      </div>
    </div>
  </div>
</div>

<% if (typeof(message) !== 'undefined' && message) { %>
  <input type="text" id="message" value='<%= JSON.stringify(message) %>' hidden>
  
<% } %>


<div class="snackbar">
  <p class="message">
   
  </p>
</div>


  <script src="/js/index.js"></script>
  <script>
    $(document).ready(function(){
     
      
        // Dummy data
       
        const sectionBtns = document.querySelectorAll('.section-btn');
        const tableContainers = document.querySelectorAll('.table-container');

        sectionBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                const target = this.getAttribute('data-target');
                console.log(target)
                sectionBtns.forEach(btn => btn.classList.remove('active'));
                this.classList.add('active');
                tableContainers.forEach(container => container.classList.remove('showme'));
                document.getElementById(target).classList.add('showme');
            });
        });
        var performanceData = {
            "2022": {
            data: [80, 75],
            color: 'rgba(255, 99, 132, 0.2)'
            },
            "2023": {
            data: [70, 85],
            color: 'rgba(54, 162, 235, 0.2)'
            },
            "2024": {
            data: [85, 80],
            color: 'rgba(255, 206, 86, 0.2)'
            }
        };

        var years = Object.keys(performanceData);
        var selectedYear = "all";
        var myChart;

        // Function to update chart
        function updateChart(year) {
            if (myChart) {
            myChart.destroy(); // Destroy previous chart instance
            }

            var ctx = document.getElementById('performanceChart').getContext('2d');
            var dataToShow = [];

            if (year === "all") {
            dataToShow = years.map(function(y) {
                return {
                label: y,
                data: performanceData[y].data,
                backgroundColor: performanceData[y].color,
                borderColor: performanceData[y].color,
                borderWidth: 1
                };
            });
            } else {
            dataToShow.push({
                label: year,
                data: performanceData[year].data,
                backgroundColor: performanceData[year].color,
                borderColor: performanceData[year].color,
                borderWidth: 1
            });
            }

            myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ["Semester 1", "Semester 2"],
                datasets: dataToShow
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            display: true,
                            drawOnChartArea: true
                        },
                        ticks: {
                            font: {
                                size: 12,
                            }
                        }
                    },
                    x: {
                        grid: {
                            display: false,
                            drawOnChartArea: false
                        },
                        ticks: {
                            font: {
                                size: 12,
                            }
                        }
                    }
                },
                legend: {
                display: true,
                labels: {
                    filter: function(item, chart) {
                    return !item.text.includes('2022') && !item.text.includes('2023') && !item.text.includes('2024');
                    }
                }
                }
            }
            });
        }

        // Initial chart
        updateChart(selectedYear);

        // Event listener for year selection
        $("#yearSelect").change(function() {
            selectedYear = $(this).val();
            updateChart(selectedYear);
        });
    });
    
    
    </script>
      
    <!-- <script>
      window.addEventListener('DOMContentLoaded', (event) => {
          // Get all rows except the last one (Total row)
          const rows = document.querySelectorAll('tbody tr:not(:last-child)');
          let totals = {
              '2022': 0,
              '2023': 0,
              '2024': 0
          };

          // Iterate over each row to calculate totals
          rows.forEach(row => {
              const cells = row.querySelectorAll('td');
              cells.forEach((cell, index) => {
                  if (index !== 0) {
                      totals[`20${index + 21}`] += parseInt(cell.textContent);
                  }
              });
          });

          // Update the total row with calculated totals
          Object.keys(totals).forEach(key => {
              document.getElementById(`total${key}`).textContent = totals[key];
          });
      });
  </script> -->
</body>
</html>